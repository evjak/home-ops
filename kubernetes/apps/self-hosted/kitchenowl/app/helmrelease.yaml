---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kitchenowl
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: kitchenowl
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      kitchenowl:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 65539

          enableServiceLinks: false

          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.6.0
            envFrom: &envFrom
              - secretRef:
                  name: kitchenowl-secret
        containers:
          app:
            image:
              repository: ghcr.io/ahinko/kitchenowl
              tag: v0.7.4
            env:
              TZ: ${TZ}
              COLLECT_METRICS: false
              DB_DRIVER: postgresql
              EMAIL_MANDATORY: false
              FRONT_URL: https://kitchenowl.${SECRET_DOMAIN}
              OPEN_REGISTRATION: false
              SMTP_PORT: 25
              SMTP_HOST: smtp-relay.network.svc.cluster.local
              SMTP_FROM: alerts@${SECRET_DOMAIN}
              STORAGE_PATH: "/data"
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 500Mi

    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 8080

    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: kitchenowl
          gethomepage.dev/name: KitchenOwl
          gethomepage.dev/group: Self-Hosted
          gethomepage.dev/description: Recipe Management
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: envoy-internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port

    persistence:
      data:
        type: persistentVolumeClaim
        existingClaim: *app
        globalMounts:
          - path: /data
